HTTP/1.1 200 OK
Content-Type: application/x-javascript
Content-Length: 3852
Connection: keep-alive
Date: Mon, 12 Dec 2016 08:27:13 GMT
Last-Modified: Wed, 11 Dec 2013 00:32:54 GMT
ETag: "b372867a38cd953392835db203cffe15"
Accept-Ranges: bytes
Server: AmazonS3
Age: 41458
X-Cache: Hit from cloudfront
Via: 1.1 ad75de90472243324ece0502a7c0229f.cloudfront.net (CloudFront)
X-Amz-Cf-Id: m20EU6WpP0I3BwM-JrWbtkoJtAgywWbmImvCpy-CsAySMg7hYL3CIA==

/*
*--------------------------------------------------------------------------------------------------------------------------------------------
* Function that will create the logo object with properties of true width and height of the logo.                                           *
*============================================================================================================================================
* name          (@String)    = The name of the logo as found in the json.                                                                   *
* styleObject   (@Object)    = The object containing the desired style and position for the logo.                                           *
* callback      (@Function)  = Function to be called after the logo has been loaded.                                                        *
*******************************************************<== NOTES ==>*************************************************************************
* 
* @author                  Dmitri Dzioura
* @date                    
* @version                 1.0

* @modify_by               Chris Brenner
* @modify_date             Dec 4, 2013

* Updated Dec 4, 2013 by Chris - Removed load and error events as they are being done in jsonItem now.
*                                Updated code to check if image has finished loading.
*                                If it hasn't it will loop until it has and then center the logoplaceholder and run callback.
*--------------------------------------------------------------------------------------------------------------------------------------------
*/
var logo = function(name, styleObject, callback) {

    // Create the jsonItem item of the logo.
    var logoJson = new jsonItem('graphic', name);

    // Store the jsonItem of the logo so it can be accessed outside.
    this.jsonItem = logoJson;

    // Add the logo to the DOM.
    id('ssm_ad_container').appendChild(logoJson.html)

    // Style the logo.
    superStyle(id(name), styleObject);

    // Style the img of the logo. It will shrink the image if too large and stay the same if too small.
    superStyle(id(name).children[0], {
        maxWidth:  id(name).style.width,
        maxHeight: id(name).style.height,
        width:     'auto',
        height:    'auto'
    })

    var self = this;

    // If logoJson.loaded is still false, start looping until it has a value of true or 'error'.
    if (!logoJson.loaded) {
        (function myLoop (i) {

            setTimeout(function () {
                // An image has now loaded - center it and run callback.
                if (logoJson.loaded == true || logoJson.loaded == 'error') {
                    centerDiv(logoJson.html.children[0]);

                    // The true width and height will be set to be used if need be.
                    self.width  = (parseInt(logoJson.html.children[0].offsetWidth));
                    self.height = (parseInt(logoJson.html.children[0].offsetHeight));

                    if(callback) {
                        callback();
                    }
                }
                // logoJson.loaded is still false - call loop again unless counter has reached limit.
                else {
                    if (--i) myLoop(i); // If logoJson.loaded is still false, re-call function.
                }

            }, 100)

        })(50); // Number of iterations.
    }
    // An image has loaded - center it and run callback.
    else {
        // Center image.
        centerDiv(logoJson.html.children[0]);

        // The true width and height will be set to be used if need be.
        self.width  = (parseInt(logoJson.html.children[0].offsetWidth));
        self.height = (parseInt(logoJson.html.children[0].offsetHeight));

        if(callback) {
            callback();
        }
    }
}