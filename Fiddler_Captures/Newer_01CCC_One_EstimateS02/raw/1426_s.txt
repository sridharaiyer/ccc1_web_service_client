HTTP/1.1 200 OK
Content-Type: application/x-javascript
Content-Length: 9330
Connection: keep-alive
Date: Tue, 11 Apr 2017 18:19:00 GMT
Last-Modified: Thu, 17 Apr 2014 23:31:21 GMT
ETag: "cfaea8fdd081f8b83fd962f868fbc4f3"
Accept-Ranges: bytes
Server: AmazonS3
Age: 44466
X-Cache: Hit from cloudfront
Via: 1.1 9cc673adbc5a0c60cd2c6b97d76622d1.cloudfront.net (CloudFront)
X-Amz-Cf-Id: n-c54sjtpxJq5Yj6tiTiI_FgKmbo-wKXxsQiKEy5988UR1IuCWqEyg==

/*
*-------------------------------------------------------------------------------------------------------------------------------
* Background Move Arrow is a triangular, filled arrow with a rectangular border around it.                                     *
* Both elements may have a colour and opacity.                                                                                 *
* On hover the arrow opacity may change and the arrow and background may move.                                                 *
* The initialPos and arrowMove parameters can be combined to move the arrows position on hover.                                *
*===============================================================================================================================
* ID                        (@String) = The id that will be used to name the arrow.                                            *
* Class                     (@String) = The class name of the arrow.                                                           *
* arrowWidth                (@Number) = The width of the arrow itself.                                                         *
* arrowHeight               (@Number) = The height of the arrow itself.                                                        *
* backgroundWidth           (@Number) = The width of the arrow background.                                                     *
* backgroundHeight          (@Number) = The height of the arrow background.                                                    *
* arrowColour               (@Array)  = The color of the arrow itself.                                                         *
* backgroundColour          (@Number) = The color of the arrow background.                                                     *
* arrowRotation             (@Number) = The rotation of the arrow.                                                             *
* arrowOpacity              (@String) = The opacity of the arrow itself.                                                       *
* backgroundOpacity         (@Array)  = The opacity of the arrow background.                                                   *
* backgroundOpacityHover    (@Number) = The opacity of the arrow background on hover.                                          *
* backgroundCornerRadius    (@Number) = The corner radius of the arrow background.                                             *
* initialPos                (@Number) = The initial position of the arrow and background.                                      *
* arrowOffset               (@Number) = The offset of the arrow in relation to the background.                                 *
* arrowMove                 (@Number) = The distance the arrow and background are offset from their initial position.          *
                                        They animate this distance on hover so they return to their initial position.          *
*******************************************************<== NOTES ==>************************************************************
* For the arrows to rotate properly across all browsers in specific IE 7 & 8 please keep the values to 90, 180 and 270.        *
* The arrow offset allows you to move the arrow from the center of the background (useful when using initialPos or arrowMove)  *
********************************************************************************************************************************
* @author                  Chris Brenner
* @date                    Feb 20th 2014
* @version                 1.0

* @modify_by               Chris Brenner
* @modify_date             Feb 20th 2014
*-------------------------------------------------------------------------------------------------------------------------------
*/

var backgroundMoveArrow = function(ID,
                                    Class,
                                    arrowWidth,
                                    arrowHeight,
                                    backgroundWidth,
                                    backgroundHeight,
                                    arrowColour,
                                    backgroundColour,
                                    arrowRotation,
                                    arrowOpacity,
                                    backgroundOpacity,
                                    backgroundOpacityHover,
                                    backgroundCornerRadius,
                                    initialPos,
                                    arrowOffset,
                                    arrowMove) {

    // Create a container to hold the background and arrow.
    var arrowContainer = document.createElement('div');
    arrowContainer.setAttribute('id',      ID);
    arrowContainer.setAttribute('class',   Class);

    // Create the background.
    var arrowBackground = document.createElement('div');
    arrowContainer.appendChild(arrowBackground);

    // Create the arrow.
    var arrow = document.createElement('div');
    arrowBackground.appendChild(arrow);


    // Stores the scope of the arrow.
    var self                        = this;

    // Stores some variables to be used by the arrow.
    this.dom                        = arrowContainer;
    this.backgroundOpacity          = backgroundOpacity;
    this.backgroundOpacityHover     = backgroundOpacityHover;
    this.initialPos                 = initialPos;
    this.arrowMove                  = arrowMove;
    this.horizontal                 = (parseInt(arrowRotation) == 0 || parseInt(arrowRotation) == 180) ? true : false;


    // Styles the arrowContainer.
    superStyle(arrowContainer, {
        position:                   'absolute',
        height:                     backgroundHeight + 'px',
        width:                      backgroundWidth + 'px'
    });

    // Styles the arrow background.
    superStyle(arrowBackground, {
        position:                   'absolute',
        top:                        self.horizontal ? 0 : - arrowMove + 'px',
        left:                       self.horizontal ? initialPos - arrowMove + 'px' : 0,
        height:                     backgroundHeight + 'px',
        width:                      backgroundWidth + 'px',
        backgroundColor:            backgroundColour,
        opacity:                    backgroundOpacity,
        filter:                     'alpha(opacity = ' + (backgroundOpacity * 100) + ')',
        '-moz-border-radius':       backgroundCornerRadius,
        '-webkit-border-radius':    backgroundCornerRadius,
        borderRadius:               backgroundCornerRadius,
        zIndex:                     5
    });

    // Styles the arrow.
    superStyle(arrow, {
        position:                   'absolute',
        top:                        (backgroundHeight - arrowHeight) * (arrowOffset) + 'px',
        left:                       (backgroundWidth - arrowWidth) * (1/2) + 'px',
        height:                     '0px',
        width:                      '0px',
        borderStyle:                'solid',
        borderWidth:                parseInt(arrowHeight/2) + 'px 0px ' + parseInt(arrowHeight/2) + 'px ' + arrowWidth + 'px',
        borderColor:                'transparent transparent transparent ' + arrowColour,
        opacity:                    arrowOpacity,
        '-webkit-transform':        'rotate(' + arrowRotation + ')',
        '-moz-transform':           'rotate(' + arrowRotation + ')',
        '-o-transform':             'rotate(' + arrowRotation + ')',
        '-ms-transform':            'rotate(' + arrowRotation + ')',
        filter:                     'alpha(opacity = ' + (arrowOpacity * 100) + ') progid:DXImageTransform.Microsoft.BasicImage(rotation=' + parseInt(parseInt(arrowRotation)/90) + ')'
    });


    // Adds mouse events to the arrow.
    // Animates arrow further into slider by arrowMove distance.
    $(arrowContainer).mouseenter(function() {
        // Kill any current animations on the elements we want to animate.
        killer.kill(arrowContainer.children[0].getAttribute('Name'));

        // Start arrow animations.
        new timeAnimation(arrowContainer.children[0], {opacity: self.backgroundOpacityHover}, 100);

        // Moves the arrow to its original position.
        if (self.horizontal) {
            new timeAnimation(arrowContainer.children[0], {left: self.initialPos}, 300);
        }
        else {
            new timeAnimation(arrowContainer.children[0], {top: self.initialPos}, 300);
        }
    });

    // Animates arrow out of slider by arrowMove distance (back to it's starting position).
    $(arrowContainer).mouseleave(function() {
        // Kill any current animations on the elements we want to animate.
        killer.kill(arrowContainer.children[0].getAttribute('Name'));

        // Start arrow animations.
        new timeAnimation(arrowContainer.children[0], {opacity: self.backgroundOpacity}, 400);

        // Moves the arrow to its offset position.
        if (self.horizontal) {
            new timeAnimation(arrowContainer.children[0], {left: self.initialPos - self.arrowMove}, 200);
        }
        else {
            new timeAnimation(arrowContainer.children[0], {top: self.initialPos - self.arrowMove}, 200);
        }
    });
}