HTTP/1.1 200 OK
Content-Type: application/x-javascript
Content-Length: 6691
Connection: keep-alive
Date: Fri, 23 Sep 2016 12:02:05 GMT
Last-Modified: Thu, 03 Apr 2014 22:01:13 GMT
ETag: "f635e2ccf83aecbae9d6f5b78ea23609"
Accept-Ranges: bytes
Server: AmazonS3
Age: 25084
X-Cache: Hit from cloudfront
Via: 1.1 ad75de90472243324ece0502a7c0229f.cloudfront.net (CloudFront)
X-Amz-Cf-Id: sgNuwKzWzxu5xEWOnX9GjQNefoXQUbtCGQdKBJicPqinzzRfIW1bQw==

//new global stage object you will need to call STAGE.init() at the begging of your template
//and STAGE.adReady once you are ready to remove the preloader everything else will be handled
//inside unless you want to change background or border on your own in which case you can use
//STAGE.chngeColor(backgroundColor, borderStyle) note(  backgroundColor is expecting just a
//hex color while borderStyle can be a style object that we pass into superStyle or a hex color
//string)  also if you want to append something to ssm_ad_container you can use STAGE.append(element)
var STAGE = {

	init: 			function() {
						this.stage = id('ssm_ad_container');
						var stage = this.stage;
						this.width	= parseInt(SSM_ad_obj.AdSize.substr(0,SSM_ad_obj.AdSize.indexOf('x'))) - 2;
    					this.height	= parseInt(SSM_ad_obj.AdSize.substr(SSM_ad_obj.AdSize.indexOf('x')+1, SSM_ad_obj.AdSize.length)) - 2;


						superStyle(stage, {
							position:   'absolute',
							overflow:   'hidden',
							cursor:     'pointer',
							border:     '1px solid #000',
							background: '#FFF',
							width: 	    this.width,
							height:     this.height
						});

						this.append(Preloader());
						superStyle(id('preloader'), {
							width:          this.width+'px',
							height:         this.height+'px',
							background:     '#FFF',
							position:       'absolute',
							top:            '0px',
							left:           '0px',
							zIndex:         '15'
						});
						centerDiv(id('preloader').children[0]);

		  			},


	colorsLoaded: 	function() {
						if(this.stage) {
							var colors = SSM_BASE.Color.get;
							var backColor = (colors['background'])?(colors['background']):((colors[0])?(colors[0]):('#FFFFFF'));
							var borderColor = (colors['border'])?(colors['border']):('#000000');
							superStyle(this.stage, {
								background: backColor,
								border: 	'1px solid '+borderColor
							});
						}
				  	},

	adReady: 		function() {
						this.stage.removeChild(id('preloader'));

			 		},

	changeColor: 	function(backgroundColor, borderStyle) {
						if(backgroundColor) {
							superStyle(this.stage, {
								background: backgroundColor
							});
						}
						if( typeof borderStyle == 'object') {
							superStyle(this.stage, borderStyle);
						} else {
							superStyle(this.stage, {
								border: '1px solid '+borderStyle
							});
						}
				 	},

	append: 		function(element) {
						this.stage.appendChild(element);
					}
}

/*
*-------------------------------------------------------------------------------------------------------------------------------
*A function that will style the base of the ad with the background color and the border, it will also add a preloader 		   *
*===============================================================================================================================
* backgroundColor	(@string) 	= The background color of the ad, it will be #FFF if not set 								   *
* borderColor 		(@string)	= The border color of the ad, it will be #000 if not set 									   *
* borderSize 		(@string) 	= The border thickness of the ads border it will be 1px if not set 							   *
*-------------------------------------------------------------------------------------------------------------------------------
*/
var stage = function(backgroundColor, borderColor, borderSize) {

    //default border size to 1 px if border size was not passed
    var _borderSize 		= (borderSize) ? (borderSize) : ('1px');

    //checks to see that got passed in for border size if it was a number and it will add 'px' to the end of it
    if(typeof _borderSize === 'number' || _borderSize.indexOf('px') == '-1') {
        _borderSize = borderSize + 'px';
    }

    //calculates the width and the height of the ad from the vars data
    this.width 				= parseInt(SSM_ad_obj.AdSize.substr(0,SSM_ad_obj.AdSize.indexOf('x'))) - 2;
    this.height 			= parseInt(SSM_ad_obj.AdSize.substr(SSM_ad_obj.AdSize.indexOf('x')+1, SSM_ad_obj.AdSize.length)) - 2;

    //sets the backgroundColor which will default to white if not passed in
    this.backgroundColor 	= (backgroundColor) ? (backgroundColor) : ('#FFF');

    //sets the border color which will default to black if not passed in
    this.borderColor		= (borderColor) 	? (borderColor) 	: ('#000');

    //sets the border size
    this.borderSize			= _borderSize;

    //applies the desired style to the ssm ad container
    superStyle(id('ssm_ad_container'), {
        position:   'absolute',
        overflow:   'hidden',
        cursor:     'pointer',
        border:     'solid ' + this.borderSize + ' ' + this.borderColor,
        width:      this.width+'px',
        height:     this.height+'px'
    });

    //adds the preloader to the ad and styles it
    this.addPreloader = function() {
        append(Preloader());
        superStyle(id('preloader'), {
            width:          this.width+'px',
            height:         this.height+'px',
            background:     '#FFF',
            position:       'absolute',
            top:            '0px',
            left:           '0px',
            zIndex:         '15'
        });
        centerDiv(id('preloader').children[0]);
    }

    //a function that will remove the preloader
    this.removePreloader = function() {
        id('ssm_ad_container').removeChild(id('preloader'));
    }

    //a function to change the border takes in color and size as parameters
    this.changeBorder = function(color, size) {
        var _size  = (size)  ? (size)  : ('1px');
        this.color = (color) ? (color) : (this.color);

        if(_size.indexOf('px') == '-1') {
            _size += 'px';
        }

        id('ssm_ad_container').style.border = 'solid ' + (_size) + (this.color);
    }

    //a function that will change the background color of the ad
    this.changeBackground = function(color) {
        id('ssm_ad_container').style.background = color;
        this.backgroundColor = color;
    }
}

//function that is used by the stage to load in the preloader gif and create the DOM elements to hold it
var Preloader = function() {
    var preloaderCell = document.createElement('div');
    preloaderCell.setAttribute('id', 'preloader');
    preloaderCell.appendChild(img = document.createElement('img'));
    img.setAttribute('src', SSM_ad_obj['ApCdnDomain']+'/products/dynamicwebads/adserving/htmlbackup/images/sonic_custom/preloader.gif');
    img.setAttribute('width', '16');
    img.setAttribute('height', '16');
    return preloaderCell;
}

//a function that will append elements as children to ssm ad container
var append = function(element) {
    id('ssm_ad_container').appendChild(element);
}
